{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/core/components/page-not-found/page-not-found.component.ts","./src/core/components/page-not-found/page-not-found.component.html","./src/core/services/dictionary.service.ts","./src/environments/environment.ts","./src/main.ts","./src/protected/add-dictionary/add-dictionary.component.ts","./src/protected/add-dictionary/add-dictionary.component.html","./src/protected/dictionary-details/dictionary-details.component.ts","./src/protected/dictionary-details/dictionary-details.component.html","./src/protected/dictionary-list/dictionary-list.component.ts","./src/protected/dictionary-list/dictionary-list.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PageNotFoundComponent } from 'src/core/components/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'spraff application';\n}\n","<div>\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"#\" class=\"navbar-brand\">Spraff </a>\n        <div class=\"navbar-nav mr-auto\">\n            <ul>\n                <li class=\"nav-item\">\n                    <a routerLink=\"dictionary\" class=\"nav-link\">Dictionary</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"add\" class=\"nav-link\">Add</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n\n    <div class=\"container mt-3\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\r\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AddDictionaryComponent } from '../protected/add-dictionary/add-dictionary.component'\r\nimport { DictionaryDetailsComponent } from '../protected/dictionary-details/dictionary-details.component';\r\nimport { DictionaryListComponent } from '../protected/dictionary-list/dictionary-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddDictionaryComponent,\r\n    DictionaryDetailsComponent,\r\n    DictionaryListComponent, \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule, \r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule,\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor(private location: Location) { }\n\n  back() {\n    this.location.back();\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-4 offset-4\">\n            <div class=\"card border-light mt  -3\">\n                <div class=\"card-body text-center\">\n                    <h1 class=\"text-center\">Page non trouvée</h1>\n                    <hr>\n                    <button class=\"btn btn-success\" type=\"button\" (click)=\"back()\">\n         Page précédente\n        </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Dictionary } from '../../shared/models/dictionary.model';\r\nimport {\r\n  AngularFireDatabase,\r\n  AngularFireList,\r\n} from '@angular/fire/compat/database';\r\nimport { Observable, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DictionaryService {\r\n  private dbPath = '/dictionaries';\r\n  dictionariesRef: AngularFireList<Dictionary>;\r\n  items: Observable<any[]>;\r\n\r\n  constructor(private angularFireDb: AngularFireDatabase) {\r\n    this.dictionariesRef = angularFireDb.list(this.dbPath);\r\n    this.items = this.angularFireDb.list(this.dbPath).valueChanges();\r\n  }\r\n\r\n  getAll(): AngularFireList<Dictionary> {\r\n    console.log(this.dictionariesRef);\r\n    return this.dictionariesRef;\r\n  }\r\n\r\n  getOne(key: string): Observable<Dictionary | null> {\r\n    console.log(this.items);\r\n    // Use snapshotChanges() to get a list of changes\r\n    return this.dictionariesRef.snapshotChanges().pipe(\r\n      map((changes) => {\r\n        // Find the specific change that matches the key\r\n        const change = changes.find((c) => c.key === key);\r\n\r\n        // If a change is found, return the corresponding data, otherwise, return null\r\n        if (change) {\r\n          const data = change.payload.val() as Dictionary;\r\n          return { key: change.key, ...data };\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  create(dictionary: Dictionary): any {\r\n    return this.dictionariesRef.push(dictionary);\r\n  }\r\n\r\n  update(key: string, update: any): Promise<void> {\r\n    return this.dictionariesRef.update(key, update);\r\n  }\r\n\r\n  delete(key: string): Promise<void> {\r\n    return this.dictionariesRef.remove(key);\r\n  }\r\n\r\n  deleteAll(): Promise<void> {\r\n    return this.dictionariesRef.remove();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: 'AIzaSyBTPX2fBzp4kn04n7kELrj5s9tFPG36BPw',\r\n    authDomain: 'spraff-ff1e8.firebaseapp.com',\r\n    databaseURL:\r\n      'https://spraff-ff1e8-default-rtdb.europe-west1.firebasedatabase.app',\r\n    projectId: 'spraff-ff1e8',\r\n    storageBucket: 'spraff-ff1e8.appspot.com',\r\n    messagingSenderId: '322124371426',\r\n    appId: '1:322124371426:web:cc23804b797128cd5155bb',\r\n    measurementId: 'G-FK4QLHJVMR',\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component } from '@angular/core';\r\nimport { Dictionary } from 'src/shared/models/dictionary.model';\r\nimport { DictionaryService } from 'src/core/services/dictionary.service';\r\n\r\n@Component({\r\n  selector: 'app-add-dictionary',\r\n  templateUrl: './add-dictionary.component.html',\r\n  styleUrls: ['./add-dictionary.component.css']\r\n})\r\nexport class AddDictionaryComponent {\r\n\r\n  dictionary: Dictionary = {\r\n    reference_Lang: '',\r\n    learning_Lang: '',\r\n    learning_Word: '',\r\n    learning_Word_Synonyms: [],\r\n    reference_Word: '',\r\n    reference_Word_Synonyms: [],\r\n    published: false\r\n  };\r\n  submitted = false;\r\n// Observable<any> dictionary = db.object('tutorial').valueChanges();\r\n\r\n\r\n  constructor(private dictionaryService: DictionaryService) { }\r\n\r\n  saveDictionary(): void {\r\n    const data = {\r\n      reference_Lang: this.dictionary.reference_Lang,\r\n      learning_Lang: this.dictionary.learning_Lang,\r\n      learning_Word: this.dictionary.learning_Word,\r\n      learning_Word_Synonyms: this.dictionary.learning_Word_Synonyms,\r\n      reference_Word: this.dictionary.reference_Word,\r\n      reference_Word_Synonyms: this.dictionary.learning_Word_Synonyms,\r\n    };\r\n\r\n    this.dictionaryService.create(data)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          console.log(res);\r\n          this.submitted = true;\r\n        },\r\n        error: (e: any) => console.error(e)\r\n      });\r\n  }\r\n\r\n  newDictionary(): void {\r\n    this.submitted = false;\r\n    this.dictionary = {\r\n      reference_Lang: '',\r\n      learning_Lang: '',\r\n      learning_Word: '',\r\n      learning_Word_Synonyms: [],\r\n      reference_Word: '',\r\n      reference_Word_Synonyms: [],\r\n      published: false\r\n    };\r\n  }\r\n\r\n}","<div>\n    <div class=\"submit-form\">\n        <div *ngIf=\"!submitted\">\n            <div class=\"form-group\">\n                <label for=\"referenceLang\"> Reference Language: </label>\n                <input type=\"text\" class=\"form-control\" id=\"referenceLang\" required [(ngModel)]=\"dictionary.reference_Lang\" name=\"referenceLang\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"learningLang\"> Learning Language: </label>\n                <input type=\"text\" class=\"form-control\" id=\"learningLang\" required [(ngModel)]=\"dictionary.learning_Lang\" name=\"learningLang\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"learningWord\"> Word recently learnt: </label>\n                <input type=\"text\" class=\"form-control\" id=\"learningWord\" required [(ngModel)]=\"dictionary.learning_Word\" name=\"learningWord\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"learningWordSynonyms\"> Word synonyms: </label>\n                <input type=\"text\" class=\"form-control\" id=\"learningWordSynonyms\" [(ngModel)]=\"dictionary.learning_Word_Synonyms\" name=\"learningWordSynonyms\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"referenceWord\"> Word's translation: </label>\n                <input type=\"text\" class=\"form-control\" id=\"referenceWord\" required [(ngModel)]=\"dictionary.reference_Word\" name=\"referenceWord\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"referenceWordSynonyms\"> Word synonyms: </label>\n                <input type=\"text\" class=\"form-control\" id=\"referenceWordSynonyms\" [(ngModel)]=\"dictionary.reference_Word_Synonyms\" name=\"referenceWordSynonyms\" />\n            </div>\n\n            <button (click)=\"saveDictionary()\" class=\"btn btn-success\">Submit</button>\n        </div>\n\n        <div *ngIf=\"submitted\">\n            <h4>Dictionary was submitted successfully!</h4>\n            <button class=\"btn btn-success\" (click)=\"newDictionary()\">Add</button>\n        </div>\n    </div>\n</div>","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { DictionaryService } from '../../core/services/dictionary.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Dictionary } from '../../shared/models/dictionary.model';\r\n\r\n@Component({\r\n  selector: 'app-dictionary-details',\r\n  templateUrl: './dictionary-details.component.html',\r\n  styleUrls: ['./dictionary-details.component.css'],\r\n})\r\nexport class DictionaryDetailsComponent implements OnInit, OnChanges {\r\n  @Input() dictionary?: Dictionary;\r\n  @Output() refreshList: EventEmitter<any> = new EventEmitter();\r\n  currentDictionary: Dictionary = {\r\n    key: '',\r\n    reference_Lang: '',\r\n    learning_Lang: '',\r\n    learning_Word: '',\r\n    learning_Word_Synonyms: [],\r\n    reference_Word: '',\r\n    reference_Word_Synonyms: [],\r\n    published: false,\r\n  };\r\n  message = '';\r\n\r\n  constructor(\r\n    private dictionaryService: DictionaryService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {}\r\n\r\n  updatePublished(status: boolean): void {\r\n    if (this.currentDictionary.key) {\r\n      this.dictionaryService\r\n        .update(this.currentDictionary.key, { published: status })\r\n        .then(() => {\r\n          this.currentDictionary.published = status;\r\n          this.message = 'The status was updated successfully!';\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  updateDictionary(): void {\r\n    const data = {\r\n      reference_Lang: this.currentDictionary.reference_Lang,\r\n      learning_Lang: this.currentDictionary.learning_Lang,\r\n      learning_Word: this.currentDictionary.learning_Word,\r\n      learning_Word_Synonyms: this.currentDictionary.learning_Word_Synonyms,\r\n      reference_Word: this.currentDictionary.learning_Word,\r\n      reference_Word_Synonyms: this.currentDictionary.reference_Word_Synonyms,\r\n    };\r\n    if (this.currentDictionary.key) {\r\n      this.dictionaryService\r\n        .update(this.currentDictionary.key, data)\r\n        .then(() => (this.message = 'The tutorial was updated successfully!'))\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  deleteDictionary(): void {\r\n    if (this.currentDictionary.key) {\r\n      this.dictionaryService\r\n        .delete(this.currentDictionary.key)\r\n        .then(() => {\r\n          this.refreshList.emit();\r\n          this.message = 'The tutorial was updated successfully!';\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"currentDictionary; else editable\">\r\n    <div *ngIf=\"currentDictionary.key\">\r\n        <h4> Dictionary </h4>\r\n        <div>\r\n            <label><strong>Reference Language:</strong></label> {{ currentDictionary.reference_Lang}}\r\n        </div>\r\n        <div>\r\n            <label><strong>Learning Language:</strong></label> {{ currentDictionary.learning_Lang }}\r\n        </div>\r\n        <div>\r\n            <label><strong>Word recently learnt:</strong></label> {{ currentDictionary.learning_Word }}\r\n        </div>\r\n        <div>\r\n            <label><strong>Word's synonyms:</strong></label> {{ currentDictionary.learning_Word_Synonyms }}\r\n        </div>\r\n        <div>\r\n            <label><strong>Translation:</strong></label> {{ currentDictionary.reference_Word }}\r\n        </div>\r\n        <div>\r\n            <label><strong>Translation synonyms:</strong></label> {{ currentDictionary.reference_Word_Synonyms }}\r\n        </div>\r\n        <div>\r\n            <label><strong> Status:</strong></label> {{ currentDictionary.published ? \"Published\" : \"Pending\"}}\r\n        </div>\r\n        <a class=\"badge badge-warning\" routerLink=\"/dictionary/{{ currentDictionary.key }}\">\r\n            Edit\r\n        </a>\r\n    </div>\r\n\r\n    <div *ngIf=\"!currentDictionary\">\r\n        <br />\r\n        <p>Please click on a Dictionary...</p>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #editable>\r\n    <div *ngIf=\"currentDictionary.key\" class=\"edit-form\">\r\n        <h4>Dictionary</h4>\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"referenceLanguage\">Reference Language </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"referenceLanguage\"\r\n                    [(ngModel)]=\"currentDictionary.reference_Lang\" name=\"referenceLanguage\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"learningLanguage\"> Learning Language </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"learningLanguage\"\r\n                    [(ngModel)]=\"currentDictionary.learning_Lang\" name=\"learningLanguage\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"learningWord\"> Word recently learnt </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"learningWord\" [(ngModel)]=\"currentDictionary.learning_Word\"\r\n                    name=\"learningWord\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"learningWordSynonyms\"> Word's synonyms: </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"learningWordSynonyms\"\r\n                    [(ngModel)]=\"currentDictionary.learning_Word_Synonyms\" name=\"learningWordSynonyms\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"referenceWord\"> Translation: </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"referenceWord\"\r\n                    [(ngModel)]=\"currentDictionary.reference_Word\" name=\"referenceWord\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"referenceWordSynonyms\"> Translation synonyms: </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"referenceWordSynonyms\"\r\n                    [(ngModel)]=\"currentDictionary.reference_Word_Synonyms\" name=\"referenceWordSynonyms\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label><strong>Status:</strong></label> {{ currentDictionary.published ? \"Published\" : \"Pending\" }}\r\n            </div>\r\n        </form>\r\n\r\n        <button class=\"badge badge-primary mr-2\" *ngIf=\"currentDictionary.published\" (click)=\"updatePublished(false)\">\r\n            UnRecord\r\n        </button>\r\n        <button *ngIf=\"!currentDictionary.published\" class=\"badge badge-primary mr-2\" (click)=\"updatePublished(true)\">\r\n            Record\r\n        </button>\r\n\r\n        <button class=\"badge badge-danger mr-2\" (click)=\"deleteDictionary()\">\r\n            Delete\r\n        </button>\r\n\r\n        <button type=\"submit\" class=\"badge badge-success mb-2\" (click)=\"updateDictionary()\">\r\n            Update\r\n        </button>\r\n        <p>{{ message }}</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"!currentDictionary.key\">\r\n        <br />\r\n        <p>Cannot access this Dictionary...</p>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { Dictionary } from '../../shared/models/dictionary.model';\r\nimport { DictionaryService } from '../../core/services/dictionary.service';\r\n\r\n@Component({\r\n  selector: 'app-dictionary-list',\r\n  templateUrl: './dictionary-list.component.html',\r\n  styleUrls: ['./dictionary-list.component.css'],\r\n})\r\nexport class DictionaryListComponent implements OnInit {\r\n  dictionaries?: Dictionary[];\r\n  currentDictionary?: Dictionary;\r\n  currentIndex = -1;\r\n  referenceWord = '';\r\n  learningWord = '';\r\n\r\n  constructor(private dictionaryService: DictionaryService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveDictionary();\r\n    this.dictionaryService.getAll();\r\n    // this.dictionaryService.getOne('1');\r\n  }\r\n\r\n  retrieveDictionary(): void {\r\n    this.dictionaryService.getAll().snapshotChanges().pipe(\r\n      map(changes =>\r\n        changes.map(c =>\r\n          ({ key: c.payload.key, ...c.payload.val() })\r\n        )\r\n      )\r\n    ).subscribe(data => {\r\n      this.dictionaries = data;\r\n    });\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.currentDictionary = undefined;\r\n    this.currentIndex = -1;\r\n    this.retrieveDictionary();\r\n  }\r\n\r\n  setActiveDictionary(dictionary: Dictionary, index: number): void {\r\n    this.currentDictionary = dictionary;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  removeAllDictionaries(): void {\r\n    this.dictionaryService.deleteAll()\r\n      .then(() => this.refreshList())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  searchReferenceWord(): void {\r\n    this.currentDictionary = {};\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  searchLearningWord(): void {\r\n    this.currentDictionary = {};\r\n    this.currentIndex = -1;\r\n  }\r\n}\r\n","<div class=\"list row\">\r\n    <div class=\"col-md-8\">\r\n        <div class=\"input-group mb-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search by reference word\" [(ngModel)]=\"referenceWord\" />\r\n            <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-secondary\" (click)=\"searchReferenceWord()\">\r\n          Search a reference word \r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <h4>Dictionary List</h4>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let dictionary of dictionaries; let i = index\" [class.active]=\"i === currentIndex\" (click)=\"setActiveDictionary(dictionary, i)\">\r\n                {{ dictionary.reference_Word }}\r\n            </li>\r\n        </ul>\r\n        <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllDictionaries()\">\r\n      Remove All\r\n        </button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <app-dictionary-details (refreshList)=\"currentDictionary\" [dictionary]=\"currentDictionary\"></app-dictionary-details>\r\n    </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}